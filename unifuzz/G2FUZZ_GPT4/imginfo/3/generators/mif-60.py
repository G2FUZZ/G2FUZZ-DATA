import os

# Ensure the ./tmp/ directory exists
os.makedirs('./tmp/', exist_ok=True)

# Define the content for a more complex MIF file
mif_content = """<MIFFile 9.00> # Generated by Python
# FrameMaker MIF example with multiple tables and images
<Frame
    <Pen 15>
    <Fill 7>
    <PenWidth  1.0 pt>
    <ObColor `Black'>
    <DashedPattern
        <DashedStyle Solid>
        <NumSegments  2>
        <DashSegment  7.0 pt>
        <DashSegment  3.0 pt>
    >
    <ShapeRect
        <BRect  1.0 in 1.0 in 6.0 in 9.0 in>
        <ShapeRectID 1>
    >
    <GroupID 1>
>
<Table
    <Tbls 1>
    <TblID 1>
    <TblFormat
        <TblTag `FirstExampleTable'>
        <TblTitle `Table 1: Complex Structures'>
        <TblPlacement Page>
        <TblStraddle No>
        <TblAlignment Center>
        <TblWidth 5.0 in>
        <TblNumColumns 3>
        <TblColumnWidths
            <ColumnWidth  1.667 in>
            <ColumnWidth  1.667 in>
            <ColumnWidth  1.667 in>
        >
        <TblBorder Yes>
        <TblBorderColor Black>
        <TblBorderWidth 0.5 pt>
        <TblCellMargins 0.2 in>
    >
    <TblH
        <THeader
            <TRow
                <TCell
                    <CellContent `Feature'>
                >
                <TCell
                    <CellContent `Detailed Description'>
                >
                <TCell
                    <CellContent `Additional Notes'>
                >
            >
        >
    >
    <TblBody
        <TBody
            <TRow
                <TCell
                    <CellContent `Multiple Tables'>
                >
                <TCell
                    <CellContent `Demonstrate the inclusion of multiple tables with separate headers and bodies'>
                >
                <TCell
                    <CellContent `This is an example of nested tables'>
                >
            >
            <TRow
                <TCell
                    <CellContent `Cell Styling'>
                >
                <TCell
                    <CellContent `Showcases different styling options for cells, including borders, shading, and text properties'>
                >
                <TCell
                    <CellContent `Styles can vary significantly'>
                >
            >
        >
    >
>
<Table
    <Tbls 2>
    <TblID 2>
    <TblFormat
        <TblTag `SecondExampleTable'>
        <TblTitle `Table 2: Embedded Images'>
        <TblPlacement Page>
        <TblStraddle Yes>
        <TblAlignment Center>
        <TblWidth 6.0 in>
        <TblNumColumns 2>
        <TblColumnWidths
            <ColumnWidth  3.0 in>
            <ColumnWidth  3.0 in>
        >
        <TblBorder Yes>
        <TblBorderColor Black>
        <TblBorderWidth 1.0 pt>
        <TblCellMargins 0.1 in>
    >
    <TblH
        <THeader
            <TRow
                <TCell
                    <CellContent `Image'>
                >
                <TCell
                    <CellContent `Description'>
                >
            >
        >
    >
    <TblBody
        <TBody
            <TRow
                <TCell
                    <CellContent `<AFrame
                        <ImportObject
                            <DIFileName `path/to/image1.jpg'>
                            <DIOffset  0.0 in 0.0 in>
                            <DIScale  60.0 60.0>
                        >
                    >'>
                >
                <TCell
                    <CellContent `This is an example of an image embedded within a table cell.'>
                >
            >
        >
    >
>
#End of MIF example
"""

# Save the MIF content to a file
with open('./tmp/complex_table_feature.mif', 'w') as mif_file:
    mif_file.write(mif_content)